<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.sterl.svg2png</groupId>
        <artifactId>svg2png-root</artifactId>
        <version>1.3.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>svg2png-cli</artifactId>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>svg2png-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.github.romankh3</groupId>
            <artifactId>image-comparison</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <!--
        https://junit.org/junit5/docs/current/user-guide/#writing-tests-parameterized-tests
        -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.21.0</version>
                <configuration>
                    <!-- failOnViolation is actually true by default, but can be
                    disabled -->
                    <failOnViolation>true</failOnViolation>
                    <!-- printFailingErrors is pretty useful -->
                    <printFailingErrors>true</printFailingErrors>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <minimizeJar>false</minimizeJar>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <transformers>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>org.sterl.svg2png.Main</Main-Class>
                                        <X-Compile-Source-JDK>${java.version}</X-Compile-Source-JDK>
                                        <X-Compile-Target-JDK>${java.version}</X-Compile-Target-JDK>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                            <!-- 
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/license/**</exclude>
                                        <exclude>META-INF/*</exclude>
                                        <exclude>META-INF/maven/**</exclude>
                                        <exclude>LICENSE</exclude>
                                        <exclude>NOTICE</exclude>
                                        <exclude>/*.txt</exclude>
                                        <exclude>build.properties</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                             -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--  https://github.com/brianm/really-executable-jars-maven-plugin -->
            <plugin>
                <groupId>org.skife.maven</groupId>
                <artifactId>really-executable-jar-maven-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <!-- value of flags will be interpolated into the java
                    invocation -->
                    <!-- as "java $flags -jar ..." -->
                    <flags>-Xmx1G</flags>

                    <!-- (optional) name for binary executable, if not set will
                    just -->
                    <!-- make the regular jar artifact executable -->
                    <programFile>svg2png</programFile>

                    <!-- (optional) name for a file that will define what script 
                        gets -->
                    <!-- embedded into the executable jar. This can be used to -->
                    <!-- override the default startup script which is -->
                    <!-- `#!/bin/sh -->
                    <!-- -->
                    <!-- exec java " + flags + " -jar "$0" "$@" -->
                    <!--
                    <scriptFile>src/packaging/someScript.extension</scriptFile> -->
                </configuration>

                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>really-executable-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>